To get started (in flask-microservices-users):
export DATABASE_URL=postgres://postgres:postgres@localhost:5432/nailart_db
export SECRET_KEY="my_precious"
export APP_SETTINGS=project.config.DevelopmentConfig



Hop into psql to look at the database:
	$ docker exec -ti $(docker ps -aqf "name=users-db") psql -U postgres

	# \c users_dev
	You are now connected to database "users_dev" as user "postgres".

	# \dt
	         List of relations
	 Schema | Name  | Type  |  Owner
	--------+-------+-------+----------
	 public | users | table | postgres
	(1 row)

	# \q


Run a command on a container:
	docker-compose run users-service python manage.py recreate_db


Set CLI vars for docker-machine:
	eval "$(docker-machine env dev)"
	This will set the following:
		export DOCKER_TLS_VERIFY="1"
		
Build the images:
	docker-compose build
Run the containers:
	docker-compose up -d
Create the database:
	docker-compose run users-service python manage.py recreate_db
Seed the database:
	docker-compose run users-service python manage.py seed_db
Run the tests:
	docker-compose run users-service python manage.py test
Stop the containers:
	docker-compose stop
Bring down the containers:
	docker-compose down
Force a build:
	docker-compose build --no-cache
Remove images:
	docker rmi $(docker images -q)
Access database via psql:
	docker exec -ti users-db psql -U postgres -W
	# Then, you can connect and run SQL queries:
	# \c users_dev
	# select * from users;



From client:
    npm run build
    cd build/
    python3 -m http.server

Build a new static image of client:
    docker build -t "test" ./ --build-arg NODE_ENV=development --build-arg REACT_APP_USERS_SERVICE_URL=http://DOCKER_MACHINE_IP

Get the docker machine IP:
    docker-machine ip dev (for dev)
    docker-machien ip aws (for aws)


Run tests locally: within -users,
	$ source env/bin/activate
	(env)$ export APP_SETTINGS=project.config.DevelopmentConfig
	(env)$ export DATABASE_URL=postgres://postgres:postgres@localhost:5432/users_dev
	(env)$ export DATABASE_TEST_URL=postgres://postgres:postgres@localhost:5432/users_test
	(env)$ python manage.py test

Migrate the database: within -users
	python manage.py db init
	python manage.py db migrate
	python manage.py db upgrade	


Part 3:
To get up and running, make sure to do:
export APP_SETTINGS=project.config.DevelopmentConfig
export DATABASE_URL=postgres://postgres:postgres@localhost:5432/users_dev
export DATABASE_TEST_URL=postgres://postgres:postgres@localhost:5432/users_test
export SECRET_KEY = 'my_precious'
python manage.py test


Set secret key (from main):
  - Python
    > import binascii
    > import os
    > binascii.hexlify(os.urandom(24))
  - Bash
    $ export SECRET_KEY=what_you_just_generated


    
